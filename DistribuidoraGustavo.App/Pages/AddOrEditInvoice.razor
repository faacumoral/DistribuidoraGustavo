@page "/addoreditinvoice/{invoiceId:int}"
@page "/addoreditinvoice"

@using DistribuidoraGustavo.App.Utils
@using DistribuidoraGustavo.App.Shared;
@inherits AddOrEditInvoiceBase

<style>
    .spinner-border {
        width:1rem !important;
        height:1rem !important;
    }
</style>

<Alerts @ref="Alert"></Alerts>

<div class="row">
    <div class="col-2">Cliente</div>
    <div class="col-4">
        <select disabled="@State.Saving" class="form-control" @onchange="(ChangeEventArgs e) => ClientChange(int.Parse(e.Value.ToString()))">
            <option value="0"> - </option>
            @foreach (var client in Clients)
            {
                @if (State.ClientSelected == client.ClientId)
                {
                    <option value="@client.ClientId" selected>@client.Name</option>
                }
                else
                {
                    <option value="@client.ClientId">@client.Name</option>
                }
            }
        </select>
    </div>

    <div class="col-2">Lista de precios</div>
    <div class="col-4">
        <select class="form-control"  disabled="@State.Saving"
        @onchange="(ChangeEventArgs e) => PriceListChange(int.Parse(e.Value.ToString()))">
            <option value="0"> - </option>
            @foreach (var priceList in PriceLists)
            {
                if (State.PriceListSelected == priceList.PriceListId)
                {
                    <option value="@priceList.PriceListId" selected>@priceList.Name</option>
                }
                else 
                {
                    <option value="@priceList.PriceListId">@priceList.Name</option>
                }
            }
        </select>
    </div>
</div>

<hr />

@if(State.ClientSelected != 0 && State.PriceListSelected != 0)
{
    <div class="row">

        <div class="col-5">
            <div class="row">

                <div class="col-10">
                    <input disabled="@State.SearchingProducts" 
                        class="form-control" @bind="State.ProductSearch" id="txtSearchProduct"
                        @bind:event="oninput" @onkeyup="WaitAndSearch" />
                </div>

                <div class="col-2" style="margin-top:8px;">
                    @if (!State.SearchingProducts)
                    {
                        <i class="bi bi-search"></i>
                    }
                    <Spinner Show="State.SearchingProducts"></Spinner>
                </div>

            </div>
        </div>


        <div class="col-7">
            <div class="d-flex bd-highlight mb-3">
                <div class="p-2 bd-highlight">
                    <span style="font-size: 25px; font-weight:bold;">Importe total: $@ProductInvoices.Sum(pi => pi.Amount)</span>
                </div>
                <div class="ms-auto p-2 bd-highlight">
                    <button class="btn btn-success" @onclick="SaveInvoice" disabled="@State.Saving">
                        @if (!State.Saving)
                        {
                            @(InvoiceId == 0 ? "Crear factura " : "Actualizar factura ")
                            <i class="bi bi-check-circle"></i>
                        }
                        else
                        {
                            @("Guardando ")
                            <Spinner Show="State.Saving"></Spinner>
                        }
                    </button>
                </div>
            </div>

        </div>

    </div>

    <div class="row">

        <div class="col-4">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th></th>
                        <th scope="col">Cód.</th>
                        <th scope="col">Nombre</th>
                        <th scope="col">Bulto</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Products == null || Products.Count == 0)
                    {
                        <p>-</p>
                    }
                    @foreach (var product in Products)
                    {
                        <tr title="@product.Name" @onclick="() => product.Checked = !product.Checked" style="cursor:pointer;">
                            <td style="width:10%;">
                                <label style="display: inline-block; width: 100%;">
                                    <input type="checkbox" @bind="product.Checked"/>
                                </label></td>
                            <td>@product.Code.ToShortString(7)</td>
                            <td>@product.Name.ToShortString()</td>
                            <td>@product.QuantityPerBox</td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>

        <div class="col-1" style="font-size: 30px; align-self: auto; cursor: pointer;" >
            <i class="bi bi-chevron-double-right" title="Agregar productos seleccionados" @onclick="AddProductsUnit"></i>
            <i class="bi bi-box-seam" title="Agregar bulto del productos seleccionados" @onclick="AddProductsBox"></i>
        </div>

        <div class="col-7">
             <table class="table table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Cód.</th>
                        <th scope="col">Nombre</th>
                        <th scope="col">Cantidad</th>
                        <th scope="col">Precio Uni.</th>
                        <th scope="col">Total</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in ProductInvoices)
                    {
                        <tr>
                            <td>@product.Code</td>
                            <td>@product.Name.ToShortString()</td>
                            <td>
                                <NumberInput 
                                    Value="@product.Quantity"
                                    Disabled="@State.Saving"
                                    HasChanged="(int val) => {product.Quantity = val; ProductValueChanged(product);}"
                                ></NumberInput>
                            </td>
                             <td>
                                <DecimalInput 
                                    Value="@product.UnitPrice"
                                    Disabled="@State.Saving"
                                    HasChanged="(decimal val) => { product.UnitPrice = val; ProductValueChanged(product);}"
                                ></DecimalInput>
                            </td> 
                            <td>
                                <DecimalInput 
                                    Value="@product.Amount"
                                    Disabled="@State.Saving"
                                    HasChanged="(decimal val) => { product.Amount = val; StateHasChanged(); }"
                                ></DecimalInput>
                            </td>
                            <td @onclick="() => RemoveInvoiceProduct(product)">
                                <button class="btn btn-danger">
                                    <i class="bi bi-clipboard-x"></i>
                                </button>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>

    </div>

}